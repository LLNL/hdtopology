
find_package(ANN REQUIRED)
# find_package(FLANN REQUIRED)

find_package(NGL REQUIRED)
find_package(NGLCu)

INCLUDE_DIRECTORIES(
        ${NGL_INCLUDE_DIR}
        ${ANN_INCLUDE_DIR}
)

ADD_EXECUTABLE(minimalTest minimalTest.cpp)
ADD_EXECUTABLE(loadTopology loadTopology.cpp)
ADD_EXECUTABLE(stressTestCPU stressTestCPU.cpp)

TARGET_LINK_LIBRARIES(minimalTest ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY})
TARGET_LINK_LIBRARIES(loadTopology ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY})
TARGET_LINK_LIBRARIES(stressTestCPU ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY})

set(CMAKE_BUILD_TYPE "Release")

if (NGLCU_FOUND)
    INCLUDE_DIRECTORIES(${NGLCU_INCLUDE_DIR})
    if (FLANN_INCLUDE_DIR)
	    INCLUDE_DIRECTORIES("${FLANN_INCLUDE_DIR}")
    endif()
    if (FAISS_INCLUDE_DIR)
	    INCLUDE_DIRECTORIES("${FAISS_INCLUDE_DIR}")
    endif()
    #ADD_EXECUTABLE(stressTest flexibleTest.cpp)
    ADD_EXECUTABLE(loadTest loadTest.cpp)
    ADD_EXECUTABLE(loadBinaryFormat loadBinaryFormat.cpp)
    #TARGET_LINK_LIBRARIES(stressTest ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY} ${NGLCU_LIBRARY})
    TARGET_LINK_LIBRARIES(loadTest ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY} ${NGLCU_LIBRARY})
    TARGET_LINK_LIBRARIES(loadBinaryFormat ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY} ${NGLCU_LIBRARY})
else()
    ADD_EXECUTABLE(loadTest loadTest.cpp)
    ADD_EXECUTABLE(loadBinaryFormat loadBinaryFormat.cpp)
    TARGET_LINK_LIBRARIES(loadTest ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY})
    TARGET_LINK_LIBRARIES(loadBinaryFormat ${HDTOPOLOGY_LIBRARY} ${HDFILEFORMAT_LIBRARY} ${ANN_LIBRARY})
endif()
